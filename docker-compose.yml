version: '3.4'

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    image: 'postgres:alpine'
    volumes:
      - ./postgres:/var/lib/postgresql/data
    restart: 'always'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres

  keycloak:
    image: jboss/keycloak:12.0.4
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      # KEYCLOAK_LOGLEVEL: DEBUG
#      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
#      JGROUPS_DISCOVERY_PROPERTIES: >
#        datasource_jndi_name=java:jboss/datasources/KeycloakDS,
#        info_writer_sleep_time=500,
#        initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    depends_on:
      - postgres
    ports:
      - "8080:8080"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_KC_URL: http://localhost:8080/auth
        REACT_APP_SERVICE_URL: http://localhost:3000/secured
    ports:
      - "8000:8000"
    depends_on:
      - keycloak

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
      args:
        REACT_APP_KC_URL: http://localhost:8080/auth
    ports:
      - "3000:3000"
    depends_on:
      - keycloak
